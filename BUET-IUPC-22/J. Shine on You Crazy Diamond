#include<bits/stdc++.h>
#define FAST_IO ios_base::sync_with_stdio(false); cin.tie(NULL)
#define all(x) (x).begin(), (x).end()
using namespace std; 
#define int long long


const int N = 1e6+10;
vector<int> isPrime(N, 1);
int cnt[N];
int mul[N];

signed main() {
   FAST_IO;
   // start

   int n;
   cin>>n;

   vector<int> ar(n);
   for(int i=0; i<n; i++){
      cin>>ar[i];
      cnt[ar[i]]++;
   }
   
   for(int i=1; i<N; i++){
      for(int j=i; j<N; j+=i){
         mul[i] += cnt[j];
         if(i>1 && isPrime[i] && i!=j)isPrime[j] = 0;
      }
   }

   vector<int> cur;
   for(int i=2; i<N; i++){
      if(isPrime[i])cur.push_back(i);
   }

   int sz = cur.size();
   int mx = 0;
   int a = 2, b = 2;

   for(int i=0; i<sz; i++){
      if(mx<mul[cur[i]]){
         mx = mul[cur[i]];
         a = cur[i], b = cur[i];
      }
      for(int j=0; j<sz; j++){
         if(i==j)continue;
         if(cur[i]*cur[j]<N){
            int val = mul[cur[i]] + mul[cur[j]] - mul[cur[i]*cur[j]];
            if(val>mx){
               mx = val;
               a = cur[i];
               b = cur[j];
            }
         }
         else break;
      }
   }

   int pos = sz-1, val = sz-1;

   for(int i=0; i<sz; i++){
      while (pos>i && cur[i]*cur[pos]>=N)
      {
         if(mul[cur[pos]]>mul[cur[val]]){
            val = pos;
         }
         pos--;
      }
      if(val!=i && mul[cur[i]] + mul[cur[val]]>mx){
         mx = mul[cur[i]] + mul[cur[val]];
         a = cur[i];
         b = cur[val];
      }
      
   }

   cout<<n-mx<<"\n";
   cout<<a<<" "<<b<<"\n";


   return 0;
}
